function showInfo() {
    app.popupManager.showInfo();
}

function hideInfo() {
    app.popupManager.hideInfo();
}

function showProtocolInfo(protocol) {
    app.popupManager.showProtocolInfo(protocol);
}

function hideProtocolInfo() {
    app.popupManager.hideProtocolInfo();
}

function showParticipantMenu(event, participantId) {
    event.stopPropagation();
    
    const menu = document.getElementById('participantMenu');
    const rect = event.target.getBoundingClientRect();
    
    menu.style.left = `${Math.min(rect.left - 150, window.innerWidth - 200)}px`;
    menu.style.top = `${rect.bottom + 5}px`;
    menu.classList.add('show');
    
    menu.dataset.participantId = participantId;
}

function viewParticipantProfile() {
    const menu = document.getElementById('participantMenu');
    const participantId = menu.dataset.participantId;
    
    app.popupManager.showParticipantProfile(participantId);
    app.hideContextMenu();
}

function toggleFavorite() {
    const menu = document.getElementById('participantMenu');
    const participantId = menu.dataset.participantId;
    const participant = app.participants.get(participantId);
    
    if (participant) {
        participant.isFavorite = !participant.isFavorite;
        app.renderParticipants();
        
        const status = participant.isFavorite ? '–¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' : '—É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ';
        app.showNotification(`‚≠ê ${participant.callsign} ${status}`);
    }
    
    app.hideContextMenu();
}

function viewHistory() {
    const menu = document.getElementById('participantMenu');
    const participantId = menu.dataset.participantId;
    console.log(`üìã –ò—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞: ${participantId}`);
    app.showNotification('üìã –ò—Å—Ç–æ—Ä–∏—è —Å–≤—è–∑–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
    app.hideContextMenu();
}

function removeParticipant() {
    const menu = document.getElementById('participantMenu');
    const participantId = menu.dataset.participantId;
    const participant = app.participants.get(participantId);
    
    if (participant && confirm(`–£–¥–∞–ª–∏—Ç—å ${participant.callsign} –∏–∑ —Å–ø–∏—Å–∫–∞?`)) {
        app.participants.delete(participantId);
        app.renderParticipants();
        app.showNotification(`üóëÔ∏è ${participant.callsign} —É–¥–∞–ª–µ–Ω`);
    }
    
    app.hideContextMenu();
}

function openDialer() {
    app.showNotification('ÔøΩÔøΩ –§—É–Ω–∫—Ü–∏–∏ —Å–≤—è–∑–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openGroupActions() {
    app.showNotification('üë• –ì—Ä—É–ø–ø–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openMap() {
    app.showNotification('üìç –ö–∞—Ä—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openVoiceCommands() {
    app.showNotification('üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openHelp() {
    app.showNotification('‚ùì –°–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openSettings() {
    app.showNotification('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)');
}

function openIncognitoCall() {
    app.popupManager.hideQuickContact();
    
    const number = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
    if (number) {
        window.location.href = `tel:${number}`;
    }
}

function openCallsignSearch() {
    app.popupManager.hideQuickContact();
    
    const callsign = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∑—ã–≤–Ω–æ–π –¥–ª—è –ø–æ–∏—Å–∫–∞:');
    if (callsign) {
        app.showNotification(`üîç –ü–æ–∏—Å–∫ "${callsign}" –≤ —Å–µ—Ç—è—Ö...`);
    }
}

function searchInNetwork() {
    app.popupManager.hideQuickContact();
    app.showNotification('üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏...');
}

function saveParticipant(event) {
    app.saveParticipant(event);
}

function hideCreateParticipant() {
    app.popupManager.hideCreateParticipant();
}

function hideQuickContact() {
    app.popupManager.hideQuickContact();
}

function hideParticipantProfile() {
    app.popupManager.hideParticipantProfile();
}

function makeCallFromProfile(participantId) {
    app.makeCall(participantId);
    app.popupManager.hideParticipantProfile();
}

function sendMessageFromProfile(participantId) {
    app.sendMessage(participantId);
    app.popupManager.hideParticipantProfile();
}

function toggleFavoriteFromProfile(participantId) {
    const participant = app.participants.get(participantId);
    if (participant) {
        participant.isFavorite = !participant.isFavorite;
        app.renderParticipants();
        app.popupManager.showParticipantProfile(participantId);
        
        const status = participant.isFavorite ? '–¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' : '—É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ';
        app.showNotification(`‚≠ê ${participant.callsign} ${status}`);
    }
}
